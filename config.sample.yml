---
### Pipeline Config
video_input: 0              # Input Must be OpenCV readable
visualize: False             # Disable for performance increase


### Object_Detection
width: 600                  # OpenCV only supports 4:3 formats others will be converted
height: 600                 # 600x600 leads to 640x480
max_frames: 5000            # only used if visualize==False
fps_interval: 5             # Interval [s] to print fps of the last interval in console
det_interval: 500           # intervall [frames] to print detections to console
det_th: 0.5                 # detection threshold for det_intervall
## speed hack
split_model: True           # Splits Model into a GPU and CPU session (currently only works for ssd_mobilenets)
ssd_shape: 300               # used for the split model algorithm (currently only supports ssd networks trained on 300x300 and 600x600 input)
## Tracking
use_tracker: False          # Use a Tracker (currently only works properly WITHOUT split_model)
tracker_frames: 20          # Number of tracked frames between detections
num_trackers: 5             # Max number of objects to track
## Model
od_model_name: 'ssd_mobilenet_v11_coco'
od_model_path: 'models/ssd_mobilenet_v11_coco/frozen_inference_graph.pb'
label_path: 'stuff/object_detection/data/mscoco_label_map.pbtxt'
num_classes: 90


### DeepLab
alpha: 0.3                  # mask overlay factor
bbox : True                 # compute boundingbox in postprocessing
minArea: 500                # min Pixel Area to apply bounding boxes (avoid noise)
## Model
dl_model_name: 'deeplabv3_mnv2_pascal_train_aug_2018_01_29'
dl_model_path: 'models/deeplabv3_mnv2_pascal_train_aug/frozen_inference_graph.pb'


### Testing
image_path: 'test_images'   # path for test.py test_images
num_images: None            # if set to None, all images are used
cpu_only: False             # CPU Placement for speed test
write_timeline: False       # write json timeline file (slows infrence by several orders)
